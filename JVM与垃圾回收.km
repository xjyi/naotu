{"root":{"data":{"id":"bwyxt0c2n6o0","created":1568384220791,"text":"JVM与垃圾回收"},"children":[{"data":{"id":"bwyxu7744p40","created":1568384314093,"text":"垃圾回收"},"children":[{"data":{"id":"bwyxua0arqo0","created":1568384320211,"text":"GC Roots","layout_right_offset":{"x":18,"y":-129},"note":"* 垃圾\n\t* 内存中已经不再被使用的空间\n\n* 如何判断是否可以被回收\n\t* 引用计数法（java不使用）\n    \t* 有一个地方引用就+1，引用失效-1，0就是可回收\n    \t* 不能解决循环引用的问题\n        \n    * 可达性分析（根搜索路径）\n    \t* 从GC roots对象对引用链路进行扫描和访问，可达的就是存活对象\n        \n\n* GC roots 对象\n\t* 虚拟机栈中引用的对象\n    \t* 栈帧中的局部变量区\n        \n    * 方法区中的类静态属性引用的对象\n    \n    * 方法区中常量引用的对象\n    \n    * 本低方法栈中native方法引用的对象"},"children":[]}]}]},"template":"default","theme":"fresh-green","version":"1.4.43"}